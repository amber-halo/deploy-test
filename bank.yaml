apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-agent
---
apiVersion: v1
kind: Secret
metadata:
  name: git-ef-megalab-bank
  namespace: demo-ns
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJnaXQuZWYtbWVnYWxhYi5lczo1MDUwIjogewoJCQkiYXV0aCI6ICJZV05qWlhOelgyczRjenBuYkhCaGRDMVRTR1p3YjBKSFpTMDJWM040YzBJMGRXdExjQT09IgoJCX0KCX0KfQo=
type: kubernetes.io/dockerconfigjson
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bank-app-deployment
  namespace: demo-ns
  labels:
    app: bank-app
spec:
  selector:
    matchLabels:
      app: bank-app
  replicas: 2
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: bank-app
    spec:
      volumes:
        - name: secrets
          secret:
            secretName: "vso-db-demo"
      containers:
      - name: bank-app
        image: git.ef-megalab.es:5050/dev-test/kubernetes/eks-dev/containers/bank-app:latest
        env:
            - name: password
              valueFrom:
                secretKeyRef:
                  name: "vso-db-demo"
                  key: password
            - name: username
              valueFrom:
                secretKeyRef:
                  name: "vso-db-demo"
                  key: username
            - name: host
              valueFrom:
                secretKeyRef:
                  name: "secretkv"
                  key: host
            - name: port
              valueFrom:
                secretKeyRef:
                  name: "secretkv"
                  key: port
            - name: database
              valueFrom:
                secretKeyRef:
                  name: "secretkv"
                  key: database
          volumeMounts:
            - name: secrets
              mountPath: /etc/secrets
              readOnly: true
        ports:
        - containerPort: 80
      imagePullSecrets:
       - name: git-ef-megalab-bank
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: bank-app
  name:  bank-app-svc
  namespace: demo-ns
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app: bank-app
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-bank-app
  namespace: demo-ns
  annotations:
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:eu-west-1:173241558200:regional/webacl/WAF-web-server-test/95e47172-e31b-4d74-9db9-5a6df8e81488
    external-dns.alpha.kubernetes.io/hostname: bank.test.ef-megalab.es
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:173241558200:certificate/c364f407-0a94-42df-ae7e-cff957edab2c
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
    alb.ingress.kubernetes.io/target-type: ip
      # alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/tags: Environment=NON-PRODUCTION,Team=DevOps,Project=MG
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/subnets: subnet-0c243a012b6db1809,subnet-021f19b09fee0d88d,subnet-03d30c109395be103
      #cert-manager.io/cluster-issuer: "letsencrypt-dev"
      #

spec:
  ingressClassName: alb
  rules:
  - host: bank.test.ef-megalab.es
    http:
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: bank-app-svc
              port:
                number: 8080